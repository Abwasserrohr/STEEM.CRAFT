#
# ==============
# config.sk
# ==============
# config.sk is part of the STEEM.CRAFT configuration.
# ==============

#
# > Set these values to match your account. Please never post this file
# > public or private to anyone once filled.
# > NEVER INSERT PRIVATE KEYS ANYWHERE ELSE IN A SKRIPT FILE, 
# > since it could get leaked accidentally. Use the functions below instead.
options:
  privatepostingkey: "<place your private posting key here>"
  serveraccountname: "<place your steem account name here>"
  appname: "STEEM.CRAFT/0.1"
  defaultAppTags: ["steemcraft"]
  DefaultBeneficiaryAccount: "skyroad"
  DefaultBeneficiaryWeight: 250
  #
  # > Currently supported formats: yaml.
  storagetype: "yaml"
  #
  # > Chat prefix that is shown in STEEM.CRAFT addons.
  chatprefix: "&7[&6&lSTEEM.CRAFT&7] &8&l>>&7"
  #
  # > Cache requested blocks from Steem?
  cacheblocks: true
  
#
# > Please do not change these functions, since they are used to share the data between
# > other Skript files on the server. Be sure to never leak your private posting key!

#
# > Function - getPrivatePostingKey
# > Actions:
# > Returns the private posting key of the server account.
function getPrivatePostingKey() :: text:
  return {@privatepostingkey}

#
# > Function - getServerAccountName
# > Actions:
# > Returns the server account name.
function getServerAccountName() :: text:
  return {@serveraccountname}

#
# > Function - getAppName
# > Actions:
# > Returns the app name which should be used.
function getAppName() :: text:
  return {@appname}

#
# > Function - getDefaultAppTags
# > Actions:
# > Returns the default app tags which should be used if
# > no other app tag is defined.
function getDefaultAppTags() :: object:
  return {@defaultAppTags}

#
# > Function - getDefaultBeneficiaryAccount
# > Actions:
# > Returns the default beneficary account.
function getDefaultBeneficiaryAccount() :: text:
  return {@DefaultBeneficiaryAccount}

#
# > Function - getDefaultBeneficiaryWeight
# > Actions:
# > Returns the default beneficary weight.
function getDefaultBeneficiaryWeight() :: number:
  return {@DefaultBeneficiaryWeight}

#
# > Function - getStorageType
# > Actions:
# > Returns the current storage type.
function getStorageType() :: text:
  return {@storagetype}

#
# > Function - getChatPrefix
# > Actions:
# > Returns the chat prefix.
function getChatPrefix() :: text:
  return {@chatprefix}

#
# > Function - getBlockCached
# > Actions:
# > Returns if blocks should be cached or not. True = cache it.
function getBlockCached() :: boolean:
  return {@cacheblocks}
