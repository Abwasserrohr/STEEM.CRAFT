# ------------------------------------------------------------------------------
# MIT License
# 
# Copyright (c) 2019 Abwasserrohr
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
# 
# ------------------------------------------------------------------------------

import:
  org.bukkit.configuration.file.YamlConfiguration
  java.io.File

#
# > Function - loadyamlconfig
# > Actions:
# > Loads a new configuration file into memory.
# > Parameters:
# > <text> The path to the configuration file.
# > <text> The configuration name that is used to retrieve data.
function loadyamlconfig(path:text,configname:text):
  set {_file} to new File({_path})
  set {_config} to new YamlConfiguration()
  {_config}.load({_file})
  set metadata value "yaml-%{_configname}%" of getDummy() to {_config}

#
# > Function - saveyamlconfig
# > Actions:
# > Saves a loaded configuration to file.
# > Parameters:
# > <text> The path to the configuration file.
# > <text> The configuration name.
function saveyamlconfig(path:text,configname:text):
  set {_file} to new File({_path})
  set {_config} to metadata value "yaml-%{_configname}%" of getDummy()
  {_config}.save({_file})

#
# > Function - getyamlconfigobject
# > Actions:
# > Returns the object that is saved to the configuration name and key.
# > Parameters:
# > <text> The configuration name that has been set on load.
# > <text> A key that is set in the configuration.
function getyamlconfigobject(configname:text,key:text) :: object:
  set {_config} to getyamlconfig({_configname})
  return {_config}.get({_key})

#
# > Function - setyamlconfigobject
# > Actions:
# > Sets a yaml config object to the defined key.
# > Parameters:
# > <text> The configuration name that has been set on load.
# > <text> A key that should be set to a specific value.
function setyamlconfigobject(configname:text,key:text,value:object):
  set {_config} to getyamlconfig({_configname})
  {_config}.set({_key},{_value})

#
# > Function - getyamlconfig
# > Actions:
# > Returns the configuration that is saved for the config name.
# > Parameters:
# > <text> The configuration name that has been set on load.
function getyamlconfig(configname:text) :: object:
  return metadata value "yaml-%{_configname}%" of getDummy()

#
# > Function - getDummy
# > Actions:
# > Returns a block as a dummy for metadata storage.
function getDummy() :: block:
  if {dummyblock} is not a block:
    add all worlds to {_worlds::*}
    set {dummyblock} to block at location at 0.0, 0.0, 0.0 in {_worlds::1}
  return {dummyblock}
