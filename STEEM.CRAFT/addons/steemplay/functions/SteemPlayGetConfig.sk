#
# ==============
# SteemPlayGetConfig.sk
# ==============
# SteemPlayGetConfig.sk is part of the STEEM.CRAFT addons.
# ==============

import:
  com.fasterxml.jackson.databind.ObjectMapper

#
# > Function - SteemPlayGetConfig
# > Gets the configuration for the specified author and permlink
# > to the current set game. Needs to be called in a while loop
# > since it will start a threaded process to retrieve the data.
# > Parameters:
# > <text> The author of the world that the config is wanted.
# > <text> The permlink of the world.
function SteemPlayGetConfig(author:text,permlink:text) :: object:
  replace all "re-steemcraft-" with "" in {_permlink}
  replace all "steemworlds-" with "" in {_permlink}
  if metadata value "SteemPlayGetConfig-%{_author}%-%{_permlink}%" of getDummy() is not set:
    set metadata value "SteemPlayGetConfig-%{_author}%-%{_permlink}%" of getDummy() to "wait"

    set {_request} to HashMap()
    {_request}.put("author",{_author})
    {_request}.put("permlink",{_permlink})
    set metadata value "SteemPlayConfigRequest" of getDummy() to {_request}

    $ thread
    SteemPlayGetConfigAsync(metadata value "SteemPlayConfigRequest" of getDummy())

    return "wait"
  else:
    return metadata value "SteemPlayGetConfig-%{_author}%-%{_permlink}%" of getDummy()

#
# > Function - SteemPlayGetConfigAsync
# > Retrieves the configuration from file and parses it into
# > an usable object.
# > Parameters:
# > <HashMap> {"author":author,"permlink":permlink}
function SteemPlayGetConfigAsync(request:object):
  delete metadata value "SteemPlayConfigRequest" of getDummy()

  set {_author} to {_request}.get("author")
  set {_permlink} to {_request}.get("permlink")
  set {_shortworld} to {_permlink}
  replace all "re-steemcraft-steemworlds-" with "" in {_shortworld}
  set {_game} to getGeneralStorageData("steemworlds",{_shortworld},"game")

  #
  # > If no game is set, default it to "creative".
  if {_game} is not set:
    set {_game} to "creative"

  #
  # > With the game, we can get the game specic configuration values.
  set {_gameconfig} to getGeneralStorageData("steemworlds",{_shortworld},"%{_game}%gameconfig")

  #
  # > If no configuration is set, make a empty json string.
  if {_gameconfig} is not set:
    set {_gameconfig} to "{}"

  #
  # > Parse the json string configuration into a readable object.
  set {_objectMapper} to new ObjectMapper()
  set {_jsonNode} to try {_objectMapper}.readTree({_gameconfig})

  #
  # > If the result isn't set, make a emtpy one.
  if {_jsonNode} is not set:
    set {_jsonNode} to {_objectMapper}.readTree("{}")

  #
  # > Save the result into metadata for 10 ticks.
  set metadata value "SteemPlayGetConfig-%{_author}%-%{_permlink}%" of getDummy() to {_jsonNode}

  wait 10 ticks
  delete metadata value "SteemPlayGetConfig-%{_author}%-%{_permlink}%" of getDummy()
